import _bleio
from adafruit_ble.advertising import Advertisement, AdvertisingDataField
from typing import Optional, Sequence, Tuple, Type, Union

__version__: str
__repo__: str

class MultiStruct(AdvertisingDataField):
    def __init__(self, struct_format: str, *, advertising_data_type: int) -> None: ...
    def __get__(self, obj: Optional['Advertisement'], cls: Type['Advertisement']) -> Optional[Union[Tuple, 'MultiStruct']]: ...
    def __set__(self, obj: Advertisement, value: Sequence) -> None: ...

class _BeaconAdvertisement(Advertisement):
    path_loss_const: float
    @property
    def uuid(self) -> bytes: ...
    @uuid.setter
    def uuid(self, uuid: bytes) -> None: ...
    @property
    def distance(self) -> float: ...
    @property
    def beacon_tx_power(self) -> int: ...
    @beacon_tx_power.setter
    def beacon_tx_power(self, power: int) -> None: ...

class iBeaconAdvertisement(_BeaconAdvertisement):
    match_prefixes: bytes
    def __init__(self, *, entry: Optional[_bleio.ScanEntry] = None) -> None: ...
    @property
    def uuid(self) -> bytes: ...
    @uuid.setter
    def uuid(self, uuid: bytes) -> None: ...
    @property
    def major(self) -> int: ...
    @major.setter
    def major(self, number: int) -> None: ...
    @property
    def minor(self) -> int: ...
    @minor.setter
    def minor(self, number: int) -> None: ...
    @property
    def beacon_tx_power(self) -> int: ...
    @beacon_tx_power.setter
    def beacon_tx_power(self, power: int) -> None: ...
